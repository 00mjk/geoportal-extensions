# [ OPTIONS ]

_OPTS_VERBOSE=false

_OPTS_RUN_BUILD=false
_OPTS_RUN_DATA=false
_OPTS_RUN_JSON=false
_OPTS_RUN_COMMIT=false
_OPTS_RUN_TAG=false
_OPTS_RUN_PUBLISH=false
_OPTS_RUN_CLEAN=false

# [ GIT ]

_GIT_USER_NAME="changemoi"
_GIT_USER_MAIL="changemoi@gthub.com"
_GIT_COMMIT_MESSAGE="Publication %library% version %version%"
_GIT_TAG_NAME="%library%-%version%"
_GIT_FILES_ADD="CHANGELOG.md, dist/, LICENCE.md, package.json, README.md"
_GIT_REPOSITORY_NAME="geoportal-extensions"

_GIT_DIR_PUBLISH_LEAFLET="geoportal-extensions-leaflet"
_GIT_REPOSITORY_NAME_LEAFLET="geoportal-extensions-leaflet"

_GIT_DIR_PUBLISH_OPENLAYERS="geoportal-extensions-openlayers"
_GIT_REPOSITORY_NAME_OPENLAYERS="geoportal-extensions-openlayers"

# Utilisation du mode "Personal access tokens"
#   Pour des raisons de securité, la clef est exposée dans une variable d'environnement (ou en param. du script) !
#   Ex. export RELEASE_GITHUB_TOKEN=""
# Si la variable d'environnement n'est pas renseignée,
# on utilise l'authentificaton via SSH-KEY...

_GIT_OAUTH_TOKEN=$RELEASE_GITHUB_TOKEN

# [ NPM ]

# Utilisation d'une authentification basique (sans token)
#    Pour des raisons de securité, les infos sont exposées dans des variables d'environnement (ou en param. du script) !
#    Ex. export RELEASE_NPMJS_TOKEN="" ou RELEASE_NPMJS_PASSWORD
#    Evolution possible : comment faire avec le token !?

_NPM_OAUTH_TOKEN=$RELEASE_NPMJS_TOKEN
_NPM_OAUTH_PWD=$RELEASE_NPMJS_PASSWORD
_NPM_OAUTH_USER="lowzonenose"
_NPM_OAUTH_MAIL="jpbazonnais@gmail.com"

# [ GITHUB - API ]

# Par defaut, les releases sont publiés en mode DRAFT !

_GITHUB_API_URL="https://api.github.com"
_GITHUB_API_UPLOAD_RELEASE_URL="/repos/%_GIT_USER_NAME%/%GIT_REPOSITORY_NAME%/releases/%release_id%/assets?name=%zip_name%"
_GITHUB_API_CREATE_RELEASE_URL="/repos/%_GIT_USER_NAME%/%GIT_REPOSITORY_NAME%/releases"
_GITHUB_API_CREATE_RELEASE_DATA='{
  "tag_name": %tag_name%,
  "target_commitish": "master",
  "name": %tag_name%,
  "body": %content%,
  "draft": true,
  "prerelease": false
}'
